/* We need to count how many trees we enconter through going down the map to the bottom */

let input = [
".#....#..##.#..####....#.......",
"......#..#....#....###......#.#",
"#..#.....#..............##.#.#.",
"#.#...#....#...#......##..#..#.",
"...#..#.##..#..#........###.#.#",
"...#.#..........#.........##...",
"...#.#....#.#....#..#......#...",
"..##.#.....#.......#.###..#..##",
"..#.......#.......#....##......",
"....##........##.##...#.###.##.",
"#.......#.......##..#......#...",
"..##.............##.#......#...",
"...#.####....#.....#...##......",
".............##.#......#.......",
"..#...#....#......#....#.......",
"..#....#..#............#.......",
"##...#..#........##..#......#..",
"##........##........#.#.......#",
"#.......#........#.#..#....###.",
".....#..#.#..........##...#....",
"..##...#......#.#...#..#...#...",
"##.##...#......#....#....#...#.",
"#.......#..#.#..#....#..###.#.#",
"#.............#.#....#..#.#....",
"...#.......###.#.##.##.#...#..#",
".##.......##..##...#..###......",
".......#.#.#.#..####..#..#..#..",
"...##......#.#.##.###....#.###.",
"###......###......#.#####..#...",
"..#........##..#..##.##..#...#.",
".....##..#...#..#.##.....#.#...",
"#......#.##....#..##.#....#.#..",
"##.#.##..#................#....",
"......#.#....#......##.....#...",
"..#...##..#..#...#..#.#..#.....",
"........#.#.#.##...#.#.....#.#.",
"#.#......#.....##..#...#.......",
"..#.#......#...........###.....",
"......##....#....##..#..#.#.#.#",
"##....#.###...#......#..#...#..",
"#.#.##....###...####.......#..#",
"##...........#.....#........#.#",
".##.#..#.....#......#.......#..",
"##..##..###....#.........##....",
"..#..#..#.##...#.#...#........#",
"#.##.###...#.......#...........",
".........#.................#...",
"#.##...#.....#..##........#....",
"....#.#...##...#...........#...",
".#.....#.#..#...##..##.....#...",
".#.....####....#..##..#........",
"...#..#......##.#..##.#.#.#..#.",
".##.#.....#.....#...#.......##.",
"......#..#..#......#...####....",
".......#......##..#..##.....#..",
"......#.#..#...#..#.#..........",
"....##.........#...............",
".#....#..##.....#....##.##.....",
"#.#.....#...#....####....#.#...",
"#.....#....#.#...#.............",
"...#..#.....#....##..#..#......",
"...#.#............#...........#",
"###.#..#.#......#.....##.....#.",
"####....#....###.....#..#.#####",
".###..#...#.#..#......##.#.#.#.",
".....#.##.#....#..##....#..#..#",
"...#....#...##.....#......#.#..",
"....#...#....#...#....#.....#.#",
".#.....#.....#.#..#......#..#..",
"..#..##....##.##....#.....##...",
"#..##...#.##...#..#.#.#.....#..",
"...#..##.#..#....#.#....######.",
"..........#..#.....#....#...##.",
"#.#####.#.###..#.....#.........",
"#....#......#..#.#.##.##..###..",
"..#...###.#.#....##.##...##....",
".......#....#..#...##......#...",
"...#.#...#..#.....#..##.#......",
"###..##...........#............",
"..#....#.##....#.#..##...#.....",
"##....#...#....#.....#.#..##...",
"..............#.##.#..#..##.###",
"......#..#..#..#.#....###...##.",
".#...#..#.#.#....#..........#..",
"..#.#.....#..#...........#.##..",
"...#.#......#......#..#..#.#...",
"...#....#.#.#.....#...#.##..#..",
".#.#..#...#........##.......#..",
"##..........#..#...#....###.#..",
"#.....###......#..#.#.#....#.#.",
"..###.......#.#...............#",
"#....#.....#.#......#..##.##...",
"#.##.#.#....#..#.#...#.#...#..#",
"#....#..#...........#.......#..",
"...#.####.....#.........###.##.",
"......#..#.....#..........#..#.",
"#...#.#..####...#...#.#.##...##",
".##.........#......#.#.#.......",
".......##...##.##....###...##..",
"...#..#....#..#.#.#.....#.#....",
"#....#.#.#.......##..###..##...",
"......#............#.#...#..#..",
"#.#.....#......#...#.......###.",
"...#.#................#...#....",
".....#......#.#..#...##.#.#...#",
"#....#.#..#..#..##..#.##..#....",
"#.................#..#....#....",
"..#....#.......####....###.....",
".#..#.#.#...###..#...#..###....",
"..#..#.#......#.###..........#.",
".....#......#.......##....##.#.",
".#....#........#.#.##.#........",
"#.#..##..#..#.#...####....##...",
"...#....#.#..#...#..........#..",
".#.....#.##....#...##..........",
"....##....#.....#.....#...#.###",
".#...##.#.#..##..#...#.#..#..#.",
"..#.......#.##.....#.#........#",
"...#...#.....##..#.#.#....#....",
"...#.....#.......##.........#.#",
".##.....#..#.#...#.#...#.#...#.",
"...........#...#.###..#...#..#.",
"#.##........#..###.##...####...",
".#.....#.#...##...#..#..#...##.",
"..#....#..#...#.....#.....##...",
"..###..#.#.....##........#.##..",
".#.#..##........#.##....#..#.##",
".####.#..##..#.#..#....##....#.",
".##....##...#.#........#.......",
"....#..#..#...#..#..#..#.#.....",
"...#......................#....",
"#.....#.#....#..#..#.#..#....#.",
"##.....#.....##..........###...",
".#..#..............#...##.#.#.#",
"...#...#.#.............#.#..#.#",
"..#.....#.......#......#.#.....",
".###.#..#..#..#.#..#.....#.....",
".....##..##...##.......#....###",
".#........###...##..#....##....",
"#....#.#......##..#....#.##..#.",
"#....#.#...#........##...###...",
".#.....#...#.###....#.##.#.####",
"###......#....#...#....##..#..#",
"##....#..###......#...#.#.#....",
"..........#......##.#..#.......",
".#..#......###.........##...#..",
"....#......#....#.........#.#.#",
"##.#.#...#.#...#...#..#......#.",
"....#.##.........#..#.....##.#.",
"........#...#..#.#.#.#.....##..",
"..#......#.#.#..#.....##.......",
"..............#....#....##.#..#",
"....#.#.....#....#.#.###.#....#",
"..#..........#..#......#.##..#.",
"...#...#.#.............#..#....",
"#.......#..#..##.........##..#.",
"..##..#............#.....#.....",
"....#.#..##...#.#..#.........#.",
"........#.......#.##....#....#.",
"...#.....#.#.....#.#....#......",
"..#......##.#.............#.#.#",
"#.#.............#.#.....#......",
".##....##.#.....#....#...##....",
".#.#....##....#.....##.........",
"...#.....#.....#.....#..#.###..",
".......#....#...##.#...#...#..#",
"..#.#.......#...###.#...#....#.",
".....###..##....###.#.##.......",
"....#..................##.#.##.",
".#.......###.##...#.#.....#....",
"....#....##...##.....#.#...#..#",
"#..#.....#......##...#....#....",
"#..##.........#.....#...#......",
"...#..##.......##......#..#####",
".#..###.###.#.##........#......",
".#...#....#....#.#....#...##...",
"##........#....#.........##..#.",
".#.....##............#.#.......",
"....#....#...........###.....##",
".#......#.#.#..#....#.#.....##.",
"......#.##.#..##....#.#.#..#...",
"#....#......#...#..####........",
"......#..#..##..#.......#.#..#.",
"##....##.###.#...#.##.#..#.###.",
".#.........#...##...#.#......#.",
"..#.#...........####.#....##.##",
".....#.#..##.#...###...#..#.#..",
"...#..#..##.#...#.....#.##...##",
"..##......##..........#..###...",
".#......##.....#.##....#.#.##.#",
"...#.......##..##.....#....#...",
".##...#...#....#..#............",
"#..#....#...........#..........",
"......#...#.#.......#...#.##..#",
"..#.###..#.....#.....#..#.....#",
"....#....#..........##....#..#.",
".......##.#.#.#......#....#...#",
"####..#.###........#..#......#.",
"#........##.#.#.#.............#",
".#......#......#..#.##.....#...",
".....##.##......##.#.....#.#.#.",
".......##.#.....##.......#.#.#.",
".#.#..#.#..#.##...#.#....#.#..#",
".#..##....#..#...##.......#..#.",
".#.#..#.......#................",
"#........#.#.#......#.#.#.#....",
"##......#...#..##.#...##.##....",
"##.#..#...........##...#..###..",
"......#.####...#........#.#.#..",
"...#........##..###.#.#...#...#",
".#.....##..#......##......###..",
"..#.#...#......#..#..##.#.....#",
"#....#..#.#..........#...#.....",
".#......#.##..###..#.#....#..##",
".......#.......#..#..#......#..",
"..##.....##.#..#..#.....##.....",
"........#.##...#.#.#..#..#..#..",
"...#.######.........#.....#..##",
".#.#............#....#.........",
"#...#....###.#......#.#........",
"#.........#....#...##..........",
"....#...........#.###.#...###..",
".........#........#.#.#..#...#.",
".#.......#.#.....#.#.....#.##..",
".....#.......#.....#.#.#.......",
"#.##..#..##.......#...#......#.",
".###.....##...##.#...##.##.#.#.",
"...#......##..##............#.#",
"...#......................#..##",
"#..#..#................#...#...",
"#..#....#.#.#...##.......#..#..",
"....#.#..###.##...#..#.###..#..",
"..#...#....####.#............#.",
"......#....#.#...#.#.#.........",
"#...#........#.....##..###.#..#",
"#....#...#...##...#..#....##...",
"#..#...#..#.......#.#..##.#..#.",
"#.#..........#...........##....",
".#...###...#......#.......#.#.#",
".........#.........#...#...##..",
"##.#..###......##..#.....#..#..",
"....##...............#.....#...",
".....#.....###.#.....#.#.......",
"....#..#......###..#..##..#....",
"......................#.....#..",
"..#..#...##....##....#........#",
"..#....#...#...#.......#.....#.",
"...##.#.#.##......#.#.#.#.####.",
".###...#..#......#.#..#........",
"#..#...##.#..#..##..##....#...#",
"...#...#..#..#..#........#..##.",
".##....#.##.#....#...#.#.#....#",
"#..#....#..#....#.......##..#.#",
"...#.#....####...........#...#.",
"#...#####...#.#..#......#...#.#",
".##....#.#.#..#......#..##.....",
"..........#..#.#.#.....##......",
".....#....#..................#.",
".........#...#...#....#..###...",
".#.#.#....#....................",
"......##............##.###..#..",
"#.#...#........####.##..#.#.##.",
"#........#.#.#.#..#.##.....#...",
"......####..#.##.......#....#..",
".........#...#...#.....#.......",
"..##.....#...#...#.....##.....#",
"....#...##....#.....#..#..##.##",
"..#.........##...##..###..#....",
"#....#.#.........##.###.#...##.",
".##...#....#..#..#.#....##.....",
"##..#..#..#...........#.##....#",
"....#..........#...#..#.....#..",
"........###..#..#.#.#.....##...",
"#...#...#..###............###..",
"..#.....#.#.#..#..#.#..#......#",
"..#...##..#....#...#......#....",
"#....#........##.....#..##....#",
"#.....#.#.#..#.......##.#.#.##.",
"..##...#...#.....#..........#..",
"##.....#....#......#..........#",
"......#..#..........#.#..####..",
"......#...#............##...##.",
"..#.......##.......#...###.###.",
".#..#.#.#...#..##.#......#.#...",
".##.....##.#.#...#.##.........#",
"#.#.######...........#.#####.#.",
"........#.##...##....##.#.##.#.",
"....#......#.....#.....###...##",
"#..............#.#....#.#....#.",
"....#..###.#.........##.#.#....",
"..#.#.#..##....####..........#.",
"...#..#.......#................",
"...#....#..............#....#..",
".....#...#...#....#.#.#..#...#.",
"......##.............###.##..##",
".#...#.#..#......#..#.##.......",
"##.....#.....#.##...#....#.....",
"..#..#.#.#.#.#..........#..###.",
"##..........#........#....#.#..",
".....#...#........#.#..###....#",
".###.#........#.##......#.#...#",
"#...##....#....#....##.#.#.....",
".....#.#............#..........",
"..#.##....................#....",
".....#..#..#.#..#.##.......#...",
".....###......#......##......##",
"#.....#.#.......##.......#...#.",
".#.#...#......#..###...#.....#.",
"#.#..#...#..##.....#...#.#..#..",
".....#.#..........#..#.........",
".###..##..##.....#...#...#..##.",
"#...#.#....#.......##..#.......",
"###...#.#.#..#.......#......#..",
"....##........#..........##....",
"............#....#...........#.",
"#..#.#....##..#.#..#......##...",
".###....##...#....##..........#",
".###........#........###.....#.",
"...#...#.#......#...#....#.....",
".###.......#.........#.........",
"....##.#......#...###......##.#",
".###...#..##.....##.......#....",
".#.#...#..#.##....#........#...",
]

/* ---------- FIRST PART OF THE CHALLENGE ---------- */

    function tobboganFunction (i, j) {
    //First we define our actual position, which is the first caracter of the first element of the array (Top left corner)
    let actualPosition = [0,0];
    //Now we need to know the lenght of the map, so we can stablish a limit to iterate the rows properly
    let mapLength = input[0].split('').length;
    let trees = 0;
    let finished = false;

    while (!finished) {
        actualPosition = [(actualPosition[0] + i) % mapLength, (actualPosition[1] + j)];
        console.log(actualPosition);
        //We check if we reached the bottom
        finished = input[actualPosition[1]] == undefined;
        if (!finished) {
            let splittedRow = input[actualPosition[1]].split('');
            if (splittedRow[actualPosition[0]] === '#') trees++;
        }
    }
    return trees;
}

let a = tobboganFunction(1, 1);
let b = tobboganFunction(3, 1);
let c = tobboganFunction(5, 1);
let d = tobboganFunction(7, 1);
let e = tobboganFunction(1, 2);

console.log(a * b * c * d * e);

/* ---------- SECOND PART OF THE CHALLENGE ---------- */

/* In this part we'll need to find out how many trees we encounter for each one of the slopes they gave us. Specifically 5 different slopes. I'll add a few lines of code to the algorithm I already wrote. To be specific, I'll write a function and pass it 2 parameters which are going to be the down and the right movement.

The movements we need to do are the following ones:
- Right 1, down 1
- Right 3, down 1
- Right 5, down 1
- Right 7, down 1
- Right 1, down 2
Once we have reached the bottom using the 5 ways they tell us to use, we will have to multiply them by each other, and the result would be the input of the second part of the problem
*/






